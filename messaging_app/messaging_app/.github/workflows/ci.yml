name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DJANGO_SECRET_KEY: testsecret
      DATABASE_ENGINE: django.db.backends.mysql
      DATABASE_NAME: test_db
      DATABASE_USER: test_user
      DATABASE_PASSWORD: test_password
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd messaging_app
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest-cov

      - name: Run flake8 Linting
        run: |
          cd messaging_app
          # Fail if any linting errors
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Wait for MySQL
        run: |
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h 127.0.0.1 -u root -proot --silent; do
            echo "Waiting for database..."
            sleep 5
          done

      - name: Run migrations
        run: |
          cd messaging_app
          python manage.py migrate

      - name: Run tests with coverage
        run: |
          cd messaging_app
          pytest --cov=. --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: messaging_app/htmlcov
